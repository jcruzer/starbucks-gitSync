body {
  color: #333;
  font-size: 16px;
  font-weight: 400;
  line-height: 1.4;
  font-family: 'Nanum Gothic', sans-serif;
  /* 이런식으로 font-family 추가해야함, 앞에꺼먼저 인식하고 점차 뒤로 따옴표는 띄어쓰기 있는 폰트에서 씀 */
  height: 3000px;
  /* 스크롤 만드려고 잠깐 */
}

/* img 태그는 인라인 요소라 베이스라인(문자의 기준선)이 존재 / 이걸 인라인->블럭요소로 변경해 없애줘야함 */
img {
  display: block;
}

a {
  text-decoration: none;
}

/* width 지정하고 margin : 0 autu; 하면 확대하면 왼쪽에 고정 축소하면 가운데 정렬*/
/* height 지정하고 margin : autu 0; 하면 확대하면 위쪽에 고정 축소하면 가운데 정렬*/
.inner {
  width: 1100px;
  margin: 0 auto;
  position: relative;
}

/* HEADER */
header {
  width: 100%;
  /* position:fixed때문에 가로넓이 최소한으로 주려드려고 해서 w:auto 해도 자동정렬 안됨 */
  /* 그래서 width:100%사용해야함 */
  background-color: #f6f5f0;
  border-bottom: 1px solid #c8c8c8;
  /* position: relative; */
  /* header .badges 의 부모요소라 추가 */
  position: fixed;
  top: 0;
}

/* 사용하는 공간에 따라 inner 높이 지정 */
header>.inner {
  height: 120px;
}

header .logo {
  /* 배치로 정렬을 하기 위해선 1. 크기값 지정(weight / height) 2. position 지정(absolute와 부모엔 relative) 3. 시작점 끝점 지정(top:0 bottom:0 left:0 right:0 등) 4. margin으로 가운데 정렬 */
  height: 75px;
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  margin: auto;
}

header .sub-menu {
  position: absolute;
  top: 10px;
  right: 0;
  display: flex;
}

header .sub-menu ul.menu {
  font-family: Arial, sans-serif;
  /* 서브메뉴들은 Arial 폰트가 더 이쁨 */
  display: flex;
  /* 수평정렬 하기 위해 display: flex*/
}

header .sub-menu ul.menu li {
  position: relative;
  /* 구분선의 부모라 position: relative */
}

/* 가상요소 선택자 */
header .sub-menu ul.menu li::before {
  content: "";
  /* 필수 요소 */

  /* display: block; */
  /* 인라인요소는 가로세로 값을 가질 수 없어서 블럭요소로 변경 */
  /* position: absolute/fixed가 있으면 블럭요소로 변경되서 주석처리 가능 */
  width: 1px;
  height: 12px;
  background-color: #e5e5e5;
  position: absolute;
  /* 구분선을 사이에 넣기위해 부모기준 position: absolute <- 이건 요소를 블럭요소로 변경해줌 그래서 display:block 주석처리 해도 가능*/
  top: 0;
  bottom: 0;
  margin: auto;
}

/* Sign In의 첫번째 구분선을 없애주기 위해 first-child 사용 */
header .sub-menu ul.menu li:first-child::before {
  display: none;
}

header .sub-menu ul.menu li a {
  font-size: 13px;
  padding: 11px 16px;
  /* 링크 주변을 눌러도 작동할 수 있게 padding 추가 */
  display: block;
  /* a태그는 인라인요소라 크기지정 불가 -> 블럭요소로 변경 */
  color: #656565;
  /* text-decoration: none; */
}

header .sub-menu ul.menu li a:hover {
  color: #000;
}

/* search부분은 블럭요소, menu도 블럭요소 두개의 블럭을 수평정렬해줘야함 그래서 sub-menu에 display:flex 추가*/
header .sub-menu .search {
  height: 34px;
  position: relative;
}

header .sub-menu .search input {
  width: 36px;
  height: 36px;
  padding: 4px 10px;
  border: 1px solid #ccc;
  border-radius: 5px;
  box-sizing: border-box;
  /* 블록요소라 크기지정 가능, 테두리값 다 계산되서 컨탠츠값 자동줄어드는 border-box 사용 */

  outline: none;
  /* 선택시 테두리 알려주는걸 없애줌 */
  background-color: #fff;
  /* 확실한 화이트로 배경을 만들어주기 위해 */
  color: #777;
  font-size: 12px;
  transition: width .4s;
  /* 클릭되면 폭만 0.4초로 변환 */
}

header .sub-menu .search input:focus {
  width: 190px;
  border-color: #690;
}

header .sub-menu .search .material-icons {
  height: 24px;
  /* 아이콘의 폰트크기와 동일한 24px */
  position: absolute;
  top: 0;
  bottom: 0;
  right: 5px;
  margin: auto;
  transition: .4s;
}

/* JS에서 input + icon 포커스 됐을 때 추가된 클래스 focused에 관한 동작 */
/* 포커스 됐을 때 아이콘 투명하게 사라지게함 */
header .sub-menu .search.focused .material-icons {
  opacity: 0;
}

header .main-menu {
  display: flex;
  position: absolute;
  bottom: 0;
  right: 0;
  z-index: 1;
  /* z-index로 순서 높여서 커서 올렸을때 위로오게함 */
}

header .main-menu .item {}


header .main-menu .item .item__name {
  padding: 10px 20px 34px 20px;
  font-family: Arial, sans-serif;
  font-size: 13px;
}

header .main-menu .item:hover .item__name {
  background-color: #2c2a29;
  color: #669900;
  border-radius: 6px 6px 0 0;
}

header .main-menu .item .item__contents {
  width: 100%;
  position: fixed;
  /* inner 안에서 뜨는게 아니라 뷰표트 전체에 뜨게 함 */
  /* top bottom 속성을 사용하지 않아 수직위치 없으면 원래위치 사용 */
  left: 0;
  display: none;
  /* 메뉴창들이 hover됐을 때만 보여주기 위해 */
}

header .main-menu .item:hover .item__contents {
  display: block;
  /* 메뉴창들이 hover됐을 때만 보여주기 위해 */
}

header .main-menu .item .item__contents .contents__menu {
  background-color: #2c2a29;
}

header .main-menu .item .item__contents .contents__menu>ul {
  display: flex;
  padding: 20px 0;
}

header .main-menu .item .item__contents .contents__menu>ul>li {
  width: 220px;
}

header .main-menu .item .item__contents .contents__menu>ul>li h4 {
  padding: 3px 0 12px 0;
  font-size: 14px;
  color: #fff;
}

/* header .main-menu .item .item__contents .contents__menu>ul>li ul {} */

header .main-menu .item .item__contents .contents__menu>ul>li ul li {
  padding: 5px 0;
  font-size: 12px;
  color: #999;
  cursor: pointer;
}

header .main-menu .item .item__contents .contents__menu>ul>li ul li:hover {
  color: #669900;
}

header .main-menu .item .item__contents .contents__texture {
  padding: 26px 0;
  font-size: 12px;
  background-image: url("../images/main_menu_pattern.jpg");
}

header .main-menu .item .item__contents .contents__texture h4 {
  color: #999;
  font-weight: 700;
}

header .main-menu .item .item__contents .contents__texture p {
  color: #690;
  margin: 4px 0 14px;
}

header .badges {
  position: absolute;
  top: 132px;
  right: 12px;
}

header .badges .badge {
  border-radius: 10px;
  overflow: hidden;
  margin-bottom: 12px;
  box-shadow: 4px 4px 10px rgba(0, 0, 0, .15);
  cursor: pointer;
}

/* VISUAL */
.visual {
  margin-top: 120px;
  /* header.inner의 높이가 120px이라 margin-top 120px */
  background-image: url("../images/visual_bg.jpg");
  background-position: center;

}

/* common에서 적용된 inner 속성들이 상속되어서 사용됨 */
.visual .inner {
  height: 646px;
  background-color: orange;
}

/* 중복된, 감싸주는 역할인 선택자는 생략 ex) inner*/
.visual .tittle {}

.visual .tittle .btn {}

.visual .cup1.image {}

.visual .cup1.text {}

.visual .cup2.image {}

.visual .cup2.text {}

.visual .spoon {}